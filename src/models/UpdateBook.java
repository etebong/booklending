/*
 This class is used to update book information in the Library
It is strickly and Admin functionality
 */
package models;

import database.ConnectDb;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author philip
 */
public class UpdateBook extends javax.swing.JDialog {

    private Connection con;
    private Statement st;
    private ResultSet rs;
    private DefaultTableModel model;
    private Book book;
    private int xMouse;
    private int yMouse;

    /**
     * Creates new form UpdateBook
     */
    public UpdateBook() {
        book = new Book();
        initComponents();
        setLocationRelativeTo(null);
        Show_Books_In_Table();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        panel_1 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        txtSearchYear = new javax.swing.JTextField();
        txtSearchTitle = new javax.swing.JTextField();
        txtSearchAuthor = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtSearchStatus = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtSearchPublisher = new javax.swing.JTextField();
        txtSearchBookEdition = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        txtSearchISBN = new javax.swing.JTextField();
        txtSearchCategory = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(800, 595));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel1MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel1MouseMoved(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, 70));

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel3.setText("<html>UPDATE<br> OPERATIONS</html>");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete-icon.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(768, 12, -1, -1));

        panel_1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panel_1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("Book's Title:");
        panel_1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1, -1));

        txtSearchYear.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtSearchYear.setForeground(new java.awt.Color(0, 51, 51));
        txtSearchYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panel_1.add(txtSearchYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 240, -1));

        txtSearchTitle.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtSearchTitle.setForeground(new java.awt.Color(0, 51, 51));
        txtSearchTitle.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panel_1.add(txtSearchTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 540, -1));

        txtSearchAuthor.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        panel_1.add(txtSearchAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 540, -1));

        jLabel23.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("ISBN:");
        panel_1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, -1, 20));

        jLabel25.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("Book's Status:");
        panel_1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 180, -1, -1));

        txtSearchStatus.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtSearchStatus.setForeground(new java.awt.Color(0, 51, 51));
        txtSearchStatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panel_1.add(txtSearchStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 170, 160, -1));

        jLabel26.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("Book's Edition:");
        panel_1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, -1));

        jLabel27.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Book's Category:");
        panel_1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, -1, -1));

        jLabel28.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Author' Name:");
        panel_1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, -1, -1));

        txtSearchPublisher.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtSearchPublisher.setForeground(new java.awt.Color(0, 51, 51));
        txtSearchPublisher.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panel_1.add(txtSearchPublisher, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 540, -1));

        txtSearchBookEdition.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtSearchBookEdition.setForeground(new java.awt.Color(0, 51, 51));
        txtSearchBookEdition.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panel_1.add(txtSearchBookEdition, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 240, -1));

        jLabel29.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("Publisher's Name:");
        panel_1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        jLabel31.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("Year Published:");
        panel_1.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, 20));

        txtSearchISBN.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        panel_1.add(txtSearchISBN, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, 240, -1));

        txtSearchCategory.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        panel_1.add(txtSearchCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 130, 160, 30));

        getContentPane().add(panel_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 740, 260));

        jPanel4.setOpaque(false);

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N
        btnSearch.setToolTipText("Click to seach book");
        btnSearch.setBorderPainted(false);
        btnSearch.setContentAreaFilled(false);
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 0, 204));
        jLabel11.setText("Please Enter Book Accession Number: ");

        txtSearch.setBackground(new java.awt.Color(255, 204, 204));
        txtSearch.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        txtSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchFocusLost(evt);
            }
        });
        txtSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSearchMouseClicked(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, -1, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        table.setBackground(new java.awt.Color(173, 216, 230));
        table.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        table.setForeground(new java.awt.Color(0, 0, 204));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Accession Number", "Book's Title", "Author's Name", "Publisher's Name", "Book's Status"
            }
        ));
        table.setFillsViewportHeight(true);
        table.setName("table"); // NOI18N
        scrollPane.setViewportView(table);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 740, -1));

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setToolTipText("Click to confirm Book's Deletetion from database ");
        btnDelete.setBorderPainted(false);
        btnDelete.setContentAreaFilled(false);
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 550, -1, -1));

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update1.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setToolTipText("Click to confirm book's update information");
        btnUpdate.setBorderPainted(false);
        btnUpdate.setContentAreaFilled(false);
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 550, 100, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bookUpdate-bg.png"))); // NOI18N
        background.setMinimumSize(new java.awt.Dimension(962, 620));
        background.setPreferredSize(new java.awt.Dimension(800, 600));
        background.setRequestFocusEnabled(false);
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1340, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (!txtSearchISBN.getText().equals("")) {
            try {
                book = getData();
                int reply = JOptionPane.showConfirmDialog(null,
                        "Do you really want to Update the record with ACCNO " + txtSearch.getText() + "?",
                        "Confirm Record Update", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (reply == JOptionPane.OK_OPTION) {
                    book.updateBook(book); // update selected fields
                    JOptionPane.showMessageDialog(null, "Successfully Updated..........");
                    txtSearch.setText("");
                    clearFieldsData();
                    model.setRowCount(0);// reset user's table on the form
                    Show_Books_In_Table();// append the newly created to the

                }

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Not successful......");// TODO:
                // handle
                // exception
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please search and display book's information to proceed");
            txtSearch.requestFocus();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        //deletes data from the database

        try {

            int reply = JOptionPane.showConfirmDialog(null,
                    "Do you really want to Delete the record with Accession Number " + txtSearch.getText() + "?",
                    "Confirm Record Deletion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (reply == JOptionPane.YES_OPTION) {
                String query = "DELETE FROM books WHERE accno = " + txtSearch.getText();
                book.deleteBook(query, "Deleted");
                txtSearch.setText("");
                model.setRowCount(0);// reset book's table on the form
                Show_Books_In_Table();// append the newly created to the
                clearFieldsData();
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Not successful......");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if (txtSearch.getText().equals("")) {
        } else {
            do_search_table();
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusLost

        if (txtSearch.getText().equals("")) {
        } else {
            do_search_table();
        }
    }//GEN-LAST:event_txtSearchFocusLost

    private void txtSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseClicked
        txtSearch.setText("");//clears the search box
        clearFieldsData();//resets the fields to null
    }//GEN-LAST:event_txtSearchMouseClicked

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        //ensures entry for search operation is digit
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtSearchKeyTyped

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        dispose();//closes this form
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_jLabel1MouseDragged

    private void jLabel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseMoved
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLabel1MouseMoved

    private void Show_Books_In_Table() {
        ArrayList<Book> list = book.getBookList();// call the method in book
        model = (DefaultTableModel) (table).getModel();
        Object[] row = new Object[5];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getAccno();
            row[1] = list.get(i).getTitle();
            row[2] = list.get(i).getAuthor();
            row[3] = list.get(i).getPublisher();
            row[4] = list.get(i).getStatus();

            model.addRow(row);
        }
    }

    private void clearFieldsData() {
        txtSearchISBN.setText("");
        txtSearchYear.setText("");
        txtSearchTitle.setText("");
        txtSearchAuthor.setText("");
        txtSearchPublisher.setText("");
        txtSearchBookEdition.setText("");
        txtSearchCategory.setText("");
        txtSearchStatus.setText("");
    }

    private void do_search_table() {
        int id = Integer.parseInt(txtSearch.getText());
        int bookNo;
        boolean found = false;

        try {
            con = ConnectDb.connect();
            st = con.createStatement();

            String sql = "SELECT * FROM books WHERE accno = " + id + "";

            rs = st.executeQuery(sql);

            rs.next();
            bookNo = rs.getInt("accno");

            if (bookNo == id) {
                panel_1.setVisible(true);
                found = true;
                txtSearchISBN.setText("" + rs.getString("isbn"));
                txtSearchYear.setText("" + rs.getString("year"));
                txtSearchTitle.setText("" + rs.getString("title"));
                txtSearchAuthor.setText("" + rs.getString("author"));
                txtSearchPublisher.setText("" + rs.getString("publisher"));
                txtSearchBookEdition.setText("" + rs.getString("edition"));
                txtSearchCategory.setText("" + rs.getString("category"));
                txtSearchStatus.setText("" + rs.getString("status"));

            } else {
                found = false;
            }
        } catch (SQLException sqlex) {
            if (found == false) {
                // display warning message
                JOptionPane.showMessageDialog(this, "Record not Found.");
                txtSearch.setText("");
                txtSearch.requestFocus();
            }

        }
    }

    private Book getData() {
        book = new Book();
        book.setAccno(Integer.parseInt(txtSearch.getText()));
        book.setIsbn(txtSearchISBN.getText());
        book.setTitle(txtSearchTitle.getText());
        book.setAuthor(txtSearchAuthor.getText());
        book.setPublisher(txtSearchPublisher.getText());
        book.setYear(Integer.parseInt(txtSearchYear.getText()));
        book.setEdition(txtSearchBookEdition.getText());
        book.setCategory(txtSearchCategory.getText());

        return book;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel panel_1;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearchAuthor;
    private javax.swing.JTextField txtSearchBookEdition;
    private javax.swing.JTextField txtSearchCategory;
    private javax.swing.JTextField txtSearchISBN;
    private javax.swing.JTextField txtSearchPublisher;
    private javax.swing.JTextField txtSearchStatus;
    private javax.swing.JTextField txtSearchTitle;
    private javax.swing.JTextField txtSearchYear;
    // End of variables declaration//GEN-END:variables

    
}
