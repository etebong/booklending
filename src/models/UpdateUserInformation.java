/*
 This class is used to update user's information in the Library
 */
package models;

import database.ConnectDb;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author philip
 */
public class UpdateUserInformation extends javax.swing.JDialog {

    private Connection con;
    private Statement st;
    private ResultSet rs;
    private DefaultTableModel model;
    private User user;
    private int xMouse;
    private int yMouse;

    /**
     * Creates new form UpdateBook
     */
    public UpdateUserInformation() {
        user = new User();
        initComponents();
        setLocationRelativeTo(null);
        Show_Users_In_Table();
        getContentPane().setBackground(Color.pink);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        search_panel = new javax.swing.JPanel();
        panel_1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtSearchFirstname = new javax.swing.JTextField();
        txtSearchCat = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtSearchMiddlename = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtSearchPhoneNo = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtSearchGender = new javax.swing.JTextField();
        txtDateReg = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtSearchAddress = new javax.swing.JTextField();
        txtSearchDepartment = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtSearchSurname = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtSearchIdentity = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(820, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update1.png"))); // NOI18N
        jButton3.setText("Update");
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 560, -1, -1));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        jButton4.setText("Delete");
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 560, -1, -1));

        jPanel3.setOpaque(false);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N
        jButton5.setToolTipText("Click to seach");
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        txtSearch.setBackground(new java.awt.Color(255, 204, 204));
        txtSearch.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        txtSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchFocusLost(evt);
            }
        });
        txtSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSearchMouseClicked(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 0, 204));
        jLabel11.setText("Please enter user identity: ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)))
                .addContainerGap())
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, -1, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        table.setBackground(new java.awt.Color(173, 216, 230));
        table.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        table.setForeground(new java.awt.Color(0, 0, 204));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Id", "Surname", "Firstname", "Department", "Phone No.", "Date Registered"
            }
        ));
        table.setFillsViewportHeight(true);
        table.setName("table"); // NOI18N
        scrollPane.setViewportView(table);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 730, -1));

        search_panel.setBackground(new java.awt.Color(204, 255, 204));
        search_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        panel_1.setBackground(new java.awt.Color(153, 204, 255));
        panel_1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panel_1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Surname:");
        panel_1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, -1, -1));

        txtSearchFirstname.setBackground(new java.awt.Color(220, 220, 220));
        txtSearchFirstname.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtSearchFirstname.setForeground(new java.awt.Color(0, 0, 153));
        txtSearchFirstname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panel_1.add(txtSearchFirstname, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, 140, -1));

        txtSearchCat.setBackground(new java.awt.Color(220, 220, 220));
        txtSearchCat.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtSearchCat.setForeground(new java.awt.Color(0, 0, 153));
        txtSearchCat.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panel_1.add(txtSearchCat, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 176, 176, -1));

        jLabel15.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Gender:");
        panel_1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 60, -1, -1));

        txtSearchMiddlename.setBackground(new java.awt.Color(220, 220, 220));
        txtSearchMiddlename.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtSearchMiddlename.setForeground(new java.awt.Color(0, 0, 153));
        panel_1.add(txtSearchMiddlename, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 151, -1));

        jLabel20.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("User Category:");
        panel_1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 180, -1, -1));

        txtSearchPhoneNo.setBackground(new java.awt.Color(220, 220, 220));
        txtSearchPhoneNo.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtSearchPhoneNo.setForeground(new java.awt.Color(0, 0, 153));
        txtSearchPhoneNo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSearchPhoneNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchPhoneNoKeyTyped(evt);
            }
        });
        panel_1.add(txtSearchPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, 190, -1));

        jLabel13.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("<html>First<br>name:</html>");
        panel_1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, -1, -1));

        jLabel19.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Dete Registered:");
        panel_1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, -1, -1));

        txtSearchGender.setBackground(new java.awt.Color(220, 220, 220));
        txtSearchGender.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtSearchGender.setForeground(new java.awt.Color(0, 0, 153));
        txtSearchGender.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panel_1.add(txtSearchGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(488, 51, 110, -1));

        txtDateReg.setBackground(new java.awt.Color(220, 220, 220));
        txtDateReg.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtDateReg.setForeground(new java.awt.Color(0, 0, 153));
        txtDateReg.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panel_1.add(txtDateReg, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 176, 148, -1));

        jLabel17.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Department:");
        panel_1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 134, -1, -1));

        jLabel18.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Phone No:");
        panel_1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 134, -1, -1));

        jLabel14.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Middlename:");
        panel_1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, -1, -1));

        txtSearchAddress.setBackground(new java.awt.Color(220, 220, 220));
        txtSearchAddress.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtSearchAddress.setForeground(new java.awt.Color(0, 0, 153));
        txtSearchAddress.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panel_1.add(txtSearchAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 460, -1));

        txtSearchDepartment.setBackground(new java.awt.Color(220, 220, 220));
        txtSearchDepartment.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtSearchDepartment.setForeground(new java.awt.Color(0, 0, 153));
        txtSearchDepartment.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panel_1.add(txtSearchDepartment, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 130, 196, -1));

        jLabel16.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Address:");
        panel_1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        txtSearchSurname.setBackground(new java.awt.Color(220, 220, 220));
        txtSearchSurname.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtSearchSurname.setForeground(new java.awt.Color(0, 0, 153));
        panel_1.add(txtSearchSurname, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 130, -1));

        jLabel21.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel21.setText("<html>Personal <br>Identity No</html>");
        panel_1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 10, -1, -1));

        txtSearchIdentity.setBackground(new java.awt.Color(220, 220, 220));
        txtSearchIdentity.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtSearchIdentity.setForeground(new java.awt.Color(0, 0, 153));
        panel_1.add(txtSearchIdentity, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 140, 30));

        javax.swing.GroupLayout search_panelLayout = new javax.swing.GroupLayout(search_panel);
        search_panel.setLayout(search_panelLayout);
        search_panelLayout.setHorizontalGroup(
            search_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(search_panelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(panel_1, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        search_panelLayout.setVerticalGroup(
            search_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, search_panelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panel_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        getContentPane().add(search_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 730, 270));

        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel1MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel1MouseMoved(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 70));

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel3.setText("<html>UPDATE<br> OPERATIONS</html>");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete-icon.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 10, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/updatebook-icon.png"))); // NOI18N
        background.setMinimumSize(new java.awt.Dimension(962, 620));
        background.setPreferredSize(new java.awt.Dimension(800, 600));
        background.setRequestFocusEnabled(false);
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1340, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_jLabel1MouseDragged

    private void jLabel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseMoved
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLabel1MouseMoved

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //updates information about a user and update table's data
        if(!txtSearch.getText().equals("")){
        try {
            user = getData();
            int reply = JOptionPane.showConfirmDialog(null,
                    "Do you really want to Update the record with UserID " + txtSearch.getText() + "?",
                    "Confirm Record Update", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (reply == JOptionPane.YES_OPTION) {
                user.UpdateUser(user); // update selected fields
                JOptionPane.showMessageDialog(null, "Successfully Updated..........");
                txtSearch.setText("");

                clearFieldsData();
                model.setRowCount(0);// reset user's table on the form
                Show_Users_In_Table();// append the newly created to the

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Not successful......");// TODO:
            // handle
            // exception
        }
        }else{
            JOptionPane.showMessageDialog(null, "Empty search string please supply userid to proceed");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtSearchPhoneNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchPhoneNoKeyTyped
        //validate the phone entry to ensure correct data is used
        validatePhoneEntry(evt);
    }//GEN-LAST:event_txtSearchPhoneNoKeyTyped

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //deletes data from the database
        deletsData();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (!txtSearch.getText().equals("")) {
            searchUser();
        } else {
            JOptionPane.showMessageDialog(null, "Empty search string, please provide search string");

        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusLost
        if (!txtSearch.getText().equals("")) {
            searchUser();
        } 
    }//GEN-LAST:event_txtSearchFocusLost

    private void txtSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseClicked
        txtSearch.setText("");//clears the search box

    }//GEN-LAST:event_txtSearchMouseClicked

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        //ensures entry for search operation is digit
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtSearchKeyTyped

    private void searchUser() {
        int id = Integer.parseInt(txtSearch.getText());
        int userNo;
        boolean found = false;

        try {
            con = ConnectDb.connect();
            st = con.createStatement();

            String sql = "SELECT * FROM users WHERE userid = " + id + "";

            rs = st.executeQuery(sql);

            rs.next();
            userNo = rs.getInt("userid");

            if (userNo == id) {
                panel_1.setVisible(true);
                found = true;
                txtSearchDepartment.setText("" + rs.getString("department"));
                txtSearchSurname.setText("" + rs.getString("surname"));
                txtSearchIdentity.setText("" + rs.getString("useridcardno"));
                txtSearchMiddlename.setText("" + rs.getString("middlename"));
                txtSearchAddress.setText("" + rs.getString("address"));
                txtSearchFirstname.setText("" + rs.getString("firstname"));
                txtSearchPhoneNo.setText("" + rs.getString("phoneno"));
                txtSearchGender.setText("" + rs.getString("gender"));
                txtSearchCat.setText("" + rs.getString("usercategory"));
                txtDateReg.setText("" + rs.getString("dateregistered"));

            } else {
                found = false;
            }
        } catch (SQLException sqlex) {
            if (found == false) {
                // display warning message
                JOptionPane.showMessageDialog(this, "Record not Found.");
                txtSearch.setText("");
                txtSearch.requestFocus();
            }

        }
    }
    
    private void validatePhoneEntry(java.awt.event.KeyEvent evt) {
        //This method validates phone number inputs and ensures that it is only number and not more than 11 digits
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_SPACE))) {
            getToolkit().beep();
            txtSearchPhoneNo.setBackground(Color.red);
            JOptionPane.showMessageDialog(null, "Please use digits (0---9) only ");
            txtSearchPhoneNo.setBackground(Color.white);
            evt.consume();

        } else {
            if (txtSearchPhoneNo.getText().length() >= 11) {
                getToolkit().beep();
                JOptionPane.showMessageDialog(null, "Local Phone number should not exceed 11 characters");
                evt.consume();
            }
        }
    }

    private void deletsData() {
        if(!txtSearchIdentity.getText().equals("")){
        try {

            int reply = JOptionPane.showConfirmDialog(null,
                    "Do you really want to Delete the record with UserID " + txtSearch.getText() + "?",
                    "Confirm Record Deletion", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (reply == JOptionPane.OK_OPTION) {
                String query = "DELETE FROM users WHERE userid = " + txtSearch.getText();
                user.deleteUser(query, "Deleted");
                txtSearch.setText("");
                panel_1.setVisible(false);
                model.setRowCount(0);// reset user's table on the form
                Show_Users_In_Table();// append the newly created to the
                clearFieldsData();//resets the fields to null
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Not successful......");// TODO:
            // handle
            // exception
        }
        }else{
            JOptionPane.showMessageDialog(null, "Empty search String please suppy userid to proceed");
        }
    }
    
    private ArrayList<User> getUsersList() /*
	 * creates an arraylist to load data from the database
     */ {
        ArrayList<User> usersList = new ArrayList<User>();
        con = ConnectDb.connect();

        String query = "SELECT userid, surname, firstname,department,phoneno,dateregistered FROM  users ";

        try {
            st = con.createStatement();
            rs = st.executeQuery(query);

            while (rs.next()) {
                user = new User(Integer.parseInt(rs.getString("userID")), rs.getString("surname"),
                        rs.getString("firstname"), rs.getString("department"), rs.getString("phoneno"),
                        rs.getString("dateRegistered"));
                usersList.add(user);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return usersList;
    }// end of getUserList

    private void Show_Users_In_Table() /*
	 * displays users in the table
     */ {
        ArrayList<User> list = getUsersList();
        model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[6];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getUserID();
            row[1] = list.get(i).getSurname();
            row[2] = list.get(i).getFirstname();
            row[3] = list.get(i).getDepartment();
            row[4] = list.get(i).getPhoneno();
            row[5] = list.get(i).getDateRegistered();

            model.addRow(row);
        }
    }// end of Show_Users_in_Table method

    private User getData() {
        //gets values from the panel_1 for delete and update operations
        //user = new User();
        user.setUserID(Integer.parseInt(txtSearch.getText()));
        user.setIdcardno(txtSearchIdentity.getText());
        user.setDepartment(txtSearchDepartment.getText());
        user.setSurname(txtSearchSurname.getText());
        user.setMiddlename(txtSearchMiddlename.getText());
        user.setAddress(txtSearchAddress.getText());
        user.setFirstname(txtSearchFirstname.getText());
        user.setPhoneno(txtSearchPhoneNo.getText());
        user.setGender(txtSearchGender.getText());
        user.setUserCategory(txtSearchCat.getText());
        user.setDateRegistered(txtDateReg.getText());

        return user;
    }

    private void clearFieldsData() {
        //clears the fields
        txtSearchAddress.setText("");
        txtSearchIdentity.setText("");
        txtSearchSurname.setText("");
        txtSearchCat.setText("");
        txtSearchDepartment.setText("");
        txtSearchFirstname.setText("");
        txtSearchGender.setText("");
        txtSearchMiddlename.setText("");
        txtSearchPhoneNo.setText("");
        txtDateReg.setText("");
    }
    
    private void updateUserInformation() {
        try {
            user = getData();
            int reply = JOptionPane.showConfirmDialog(null,
                    "Do you really want to Update the record with UserID " + txtSearch.getText() + "?",
                    "Confirm Record Update", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (reply == JOptionPane.YES_OPTION) {
                user.UpdateUser(user); // update selected fields
                JOptionPane.showMessageDialog(null, "Successfully Updated..........");
                txtSearch.setText("");

                clearFieldsData();
                model.setRowCount(0);// reset user's table on the form
                Show_Users_In_Table();// append the newly created to the

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Not successful......");// TODO:
            // handle
            // exception
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateUserInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateUserInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateUserInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateUserInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateUserInformation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel panel_1;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JPanel search_panel;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtDateReg;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearchAddress;
    private javax.swing.JTextField txtSearchCat;
    private javax.swing.JTextField txtSearchDepartment;
    private javax.swing.JTextField txtSearchFirstname;
    private javax.swing.JTextField txtSearchGender;
    private javax.swing.JTextField txtSearchIdentity;
    private javax.swing.JTextField txtSearchMiddlename;
    private javax.swing.JTextField txtSearchPhoneNo;
    private javax.swing.JTextField txtSearchSurname;
    // End of variables declaration//GEN-END:variables

    

}
