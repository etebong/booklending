/*
 This class helps to renew books that has been borrowed by a member
 */
package models;

import database.ConnectDb;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

/**
 *
 * @author philip
 */
public class CheckInToRenewBook extends javax.swing.JDialog {

    private Connection con;
    private PreparedStatement pst;
    private ResultSet rs;
    private Date date;
    private Statement st;
    private String yourReturnDate;
    private Calendar cal = Calendar.getInstance();

    private Fine fine = new Fine();
    private RenewBook renew;//
    private int xMouse;
    private int yMouse;

    public CheckInToRenewBook() {
        renew = new RenewBook();
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel15 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        lblCharges = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtFine = new javax.swing.JLabel();
        lblDays = new javax.swing.JLabel();
        dateChooser = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblCurrentDate = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtUserId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtDateIssued = new javax.swing.JTextField();
        txtDateDue = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtAccNo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTransactionId = new javax.swing.JTextField();
        txtTitle = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel15MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel15MouseMoved(evt);
            }
        });
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 60));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/clear.png"))); // NOI18N
        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 410, -1, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel11.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel11.setText("Overdue Fine:");

        lblCharges.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        lblCharges.setForeground(new java.awt.Color(0, 0, 102));

        jLabel13.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel13.setText("Days overdue:");

        jLabel14.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel14.setText("Charges per day:");

        txtFine.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtFine.setForeground(new java.awt.Color(0, 0, 102));

        lblDays.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        lblDays.setForeground(new java.awt.Color(0, 0, 102));

        dateChooser.setDateFormatString(" yyyy-MM-dd");

        jLabel16.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel16.setText("Return Date:");

        jLabel12.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel12.setText("Return Date:");

        lblCurrentDate.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        lblCurrentDate.setText("Current Date");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCharges, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblDays, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 9, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel12))
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCurrentDate))
                .addGap(23, 23, 23))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(lblCurrentDate)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtFine, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16))
                            .addComponent(jLabel11))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(lblCharges, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDays, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 580, 80));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        txtUserId.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel7.setText("<html>User <br>Identity</html>");

        jLabel8.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel8.setText("User's Name:");

        txtUserName.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel9.setText("Date Issued:");

        jLabel10.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel10.setText("Due Date:");

        txtDateIssued.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        txtDateDue.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDateIssued)
                    .addComponent(txtDateDue, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtDateIssued, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtDateDue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 580, 90));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel4.setText("Book's Accession Number:");

        txtAccNo.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtAccNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAccNoFocusLost(evt);
            }
        });
        txtAccNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAccNoMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel5.setText("Transaction Identity:");

        txtTransactionId.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        txtTitle.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel3.setText("Book's Title");

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel6.setText("Book's Author:");

        txtAuthor.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(4, 4, 4)
                        .addComponent(txtAccNo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel5)
                        .addGap(8, 8, 8)
                        .addComponent(txtTransactionId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtAuthor))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtAccNo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtTransactionId, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 580, 130));

        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 0, 30, 30));

        jButton1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ok.png"))); // NOI18N
        jButton1.setText("Ok");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 410, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/newCheck.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void txtAccNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAccNoFocusLost

        if (txtAccNo.getText().equals("")) {

        } else {
            int id = Integer.parseInt(txtAccNo.getText());
            String rem = "0";
            int bookIdBorrowed;
            boolean found = false;
            con = ConnectDb.connect();
            String sql = "SELECT * FROM transaction WHERE accno = ? and remark =?";
            try {

                pst = con.prepareCall(sql);
                pst.setString(1, txtAccNo.getText());
                pst.setString(2, "Not Returned");

                rs = pst.executeQuery();

                if (rs.next()) {
                    // load values from table into variables
                    bookIdBorrowed = rs.getInt("accno");
                    int transacid = rs.getInt("transactionid");
                    int userid = rs.getInt("userid");
                    String author = rs.getString("author");
                    String userName = rs.getString("name");
                    String title = rs.getString("booktitle");
                    String dateIssued = rs.getString("dateborrowed");
                    String dateDue = rs.getString("datedue");
                    String remark = rs.getString("remark");
                    // System.out.println(remark);
                    rs.close();

                    found = true;
                    // displays the values on the table

                    txtAccNo.setText("" + id);
                    txtTransactionId.setText("" + transacid);
                    txtTitle.setText("" + title);
                    txtAuthor.setText("" + author);
                    txtUserName.setText("" + userName);
                    txtUserId.setText("" + userid);
                    txtDateIssued.setText("" + dateIssued);
                    txtDateDue.setText("" + dateDue);

                    date = new Date();// set default date
                    dateChooser.setDate(date);

                } else {
                    found = false;
                    JOptionPane.showMessageDialog(this, "Record not Found.");
                    clearFields();
                    txtAccNo.requestFocus();
                }

            } catch (SQLException sqlex) {

                if (found == false) {

                    // txtClear();
                }

            }
        }

    }//GEN-LAST:event_txtAccNoFocusLost

    private void txtAccNoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAccNoMouseClicked
        txtAccNo.setText("");//clears the textbox
    }//GEN-LAST:event_txtAccNoMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (txtAccNo.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Book's Accession number not Provided.");
            txtAccNo.requestFocus();
        } else {
            try {
                // define variables
                int borrowyear, borrowmonth, borrowday, returnyear, returnmonth, returnday;
                Date returnDate;
                Date borrowedDate;
                long calculatedFine;
                long convertedBorrowedDate;
                long convertedReturnedDate;
                long charge = 0;
                // establish connection to database
                con = ConnectDb.connect();
                st = con.createStatement();
                SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");

                try {

                    yourReturnDate = format.format(dateChooser.getDate());

                } catch (Exception e) {
                    e.printStackTrace();
                }
                // calculateFine.setReturnday(yourReturnDate);

                int borrowedBookId = Integer.parseInt(txtAccNo.getText());
                // rs = st.executeQuery("Select * from books where accno=" +
                // borrowedBookId + "");
                rs = st.executeQuery("select * from users  where userid = " + txtUserId.getText() + "");
                rs.next();
                int tBooksBorrowed = rs.getInt("totalbooksborrowed");
                rs.close();

                String strReturnDate = yourReturnDate;// Use this to enable
                // string parsing

                StringTokenizer string1 = new StringTokenizer(strReturnDate, "-");
                returnyear = Integer.parseInt(string1.nextToken());
                returnmonth = Integer.parseInt(string1.nextToken());
                returnday = Integer.parseInt(string1.nextToken());

                // set the current date
                cal.set(returnyear, returnmonth, returnday);
                returnDate = cal.getTime(); // read the date

                // set the date due for the book borrowed
                String dueDate = txtDateDue.getText();// Use this to enable
                // string parsing

                StringTokenizer string2 = new StringTokenizer(dueDate, "-");
                borrowyear = Integer.parseInt(string2.nextToken());
                borrowmonth = Integer.parseInt(string2.nextToken());
                borrowday = Integer.parseInt(string2.nextToken());

                // set the current date
                cal.set(borrowyear, borrowmonth, borrowday);
                borrowedDate = cal.getTime(); // read the date

                // convert the date to long
                convertedBorrowedDate = borrowedDate.getTime();
                convertedReturnedDate = returnDate.getTime();

                long test = convertedReturnedDate - convertedBorrowedDate;
                if (test > 0) {

                    charge = fine.calculateFine(convertedBorrowedDate, convertedReturnedDate);
                    txtFine.setText("N" + Long.toString(charge) + ".00");
                    lblCurrentDate.setText(yourReturnDate);
                    lblCharges.setText(Long.toString(fine.getCharges()) + ".00");
                    lblDays.setText(Long.toString(fine.getDay()) + " days");
                    this.setAlwaysOnTop(false);
                    int reply = JOptionPane.showConfirmDialog(null,
                            "Are you ready to pay your fine of N" + charge + ".00 now? ", "Confirm Payment",
                            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    this.setAlwaysOnTop(true);
                    if (reply == JOptionPane.YES_OPTION) {
                        // collect calculateFine and set charge to zero
                        charge = 0;

                    } else {
                        setAlwaysOnTop(false);
                        JOptionPane.showMessageDialog(null, "Please later you meet Admin and clear you debt");
                    }
                }
                setAlwaysOnTop(true);

                // Update all the tables involved in the transaction
                int updateTrnsactionTable = st.executeUpdate("UPDATE transaction SET fine = " + charge
                        + ",returneddate = '" + yourReturnDate + "', remark = 'Returned' WHERE transactionid = "
                        + Integer.parseInt(txtTransactionId.getText()) + "");
                int updateBookTable = st.executeUpdate(
                        "Update books SET status = 'Available' WHERE accno =" + txtAccNo.getText() + "");
                /*
                         * int updateUsersTable = st.executeUpdate(
                         * "UPDATE users SET totalbooksborrowed = "
                         * 
                         * + (tBooksBorrowed - 1), calculateFine = (charge) +
                         * " WHERE userid = " + txtUserId.getText() + "");
                 */
                int myupdate = st
                        .executeUpdate("UPDATE users SET fine= \' " + charge + "\', totalbooksborrowed = \'"
                                + (tBooksBorrowed - 1) + "\' WHERE userid=\'" + txtUserId.getText() + "\'");
                // Confirm
                // transfer transaction information to log file
                Transaction transaction = new Transaction();
                int result = transaction.saveToLogFile(Integer.parseInt(txtTransactionId.getText()),
                        Integer.parseInt(txtUserId.getText()), txtUserName.getText(),
                        Integer.parseInt(txtAccNo.getText()), txtTitle.getText(), txtAuthor.getText(),
                        txtDateIssued.getText(), txtDateDue.getText(), charge, yourReturnDate, "Returned");

                JOptionPane.showMessageDialog(this, "Book Successfully Returned");
                clearFields();
                dispose();
                renew.setVisible(true);//sets RenewBook form visible

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "There is a problem");
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        clearFields();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel15MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_jLabel15MouseDragged

    private void jLabel15MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseMoved
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLabel15MouseMoved
   
    private void clearFields() {
        txtAccNo.setText("");
        txtTransactionId.setText("");
        txtTitle.setText("");
        txtAuthor.setText("");
        txtUserName.setText("");
        txtUserId.setText("");
        txtDateIssued.setText("");
        txtDateDue.setText("");
    }
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblCharges;
    private javax.swing.JLabel lblCurrentDate;
    private javax.swing.JLabel lblDays;
    private javax.swing.JTextField txtAccNo;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtDateDue;
    private javax.swing.JTextField txtDateIssued;
    private javax.swing.JLabel txtFine;
    private javax.swing.JTextField txtTitle;
    private javax.swing.JTextField txtTransactionId;
    private javax.swing.JTextField txtUserId;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables

}
